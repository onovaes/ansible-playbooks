#################################################
# DO Community Playbooks: Initial Server Setup
#################################################
---
- hosts: apis
  become: true
  vars_files:
    - vars/default.yml

  tasks:
    - name: Instala os pré-requisitos
      apt: name=aptitude update_cache=yes state=latest force_apt_get=yes

# Sudo Group Setup
    - name: Garante que temos um grupo 'wheel'
      group:
        name: wheel
        state: present

    - name: Usuários do grupo wheel poderá usar sudo sem senha 
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: '/usr/sbin/visudo -cf %s'

# User + Key Setup
    - name: Cria um usuário com privilégio de root 
      user:
        name: "{{ create_user }}"
        state: present
        groups: wheel
        append: true
        create_home: true
        shell: /bin/bash

    - name: Copia a minha chave publica para o usuário
      authorized_key:
        user: "{{ create_user }}"
        state: present
        key: "{{ copy_local_key }}"

    - name: Desabilita a autentição no ssh pelo usuário root
      lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: '^#?PermitRootLogin'
        line: 'PermitRootLogin without-password'

    - name: Restart do sshd
      service:
        name: 'sshd'
        state: 'restarted'

# Install Packages
    - name: Update apt
      apt: update_cache=yes

    - name: Install required system packages
      apt: name={{ sys_packages }} state=latest

# UFW Setup
    - name: UFW - Allow SSH connections
      ufw:
        rule: allow
        name: OpenSSH

    - name: UFW - Deny all other incoming traffic by default
      ufw:
        state: enabled
        policy: deny
        direction: incoming
